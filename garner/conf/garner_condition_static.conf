conditions {

        CALL sethreshold
        if(std_event.gr_data.action = "1") {
                RETURN
        }

        CALL dev_discovery
        if(std_event.gr_data.action = "1") {
                RETURN
        }
        if(std_event.gr_data.action = "2" | std_event.device.device_id = "new" ) {
                CALL pg_new_device_alert
        }


#       CALL CRFormatter
        if ( std_event.system.application = "" ){
                CALL application_resolver
        }
        CALL proto_group_resolver



#        CALL webarchiever
#        CALL webindexer

    if ( std_event.log.log_component = "9" & (std_event.log.log_subtype = "1" | std_event.log.log_subtype = "5")) {
#       CALL webusagedata
        CALL pg_webusagedata
    }

     if ( std_event.log.log_type = "1"  & std_event.log.log_subtype = "1" ) {
#       CALL firewall_traffic_data
        CALL pg_firewall_traffic_data
    }

    if ( std_event.log.log_type = "1"  & std_event.log.log_subtype = "2" ) {
        CALL pg_firewall_blocked_traffic_data
    }



    if ( std_event.log.log_component = "11" | std_event.log.log_component = "12" | std_event.log.log_component = "13" ) {
#       CALL  mail_data
        CALL  pg_mail_data
    }

    if ( std_event.log.log_component = "10" & (std_event.log.log_subtype = "1" | std_event.log.log_subtype = "5")) {
#       CALL  clean_ftp_data
        CALL  pg_clean_ftp_data
    }

    if ( std_event.log.log_component = "9" & std_event.log.log_subtype = "2") {
#       CALL  denied_web_content_categorization_data
        CALL  pg_denied_web_content_categorization_data
    }

    if ( std_event.log.log_type = "2" & (std_event.log.log_component = "7" | std_event.log.log_component = "8") ) {
#       CALL  idp_alerts_data
        CALL  pg_idp_alerts_data
    }

    if ( std_event.log.log_subtype = "6") {
#       CALL  virus_data
        CALL  pg_virus_data
    }

#       CALL  traffic_firewall_data
#       CALL  pg_traffic_firewall_data
#       CALL  protocol_groupbased_traffic_data
#       CALL  pg_protocol_groupbased_traffic_data
#       CALL  firewall_rules_data
#       CALL  pg_firewall_rules_data
#       CALL  denied_traffic_data
#       CALL  pg_denied_traffic_data
